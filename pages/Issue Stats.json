{
  "unpublishedPage": {
    "name": "Issue Stats",
    "slug": "issue-stats",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 763,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 1900,
          "containerStyle": "none",
          "snapRows": 196,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 46,
          "minHeight": 1292,
          "parentColumnSpace": 1,
          "dynamicTriggerPathList": [],
          "dynamicBindingPathList": [],
          "leftColumn": 0,
          "children": [
            {
              "widgetName": "Platform_Features",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 152,
              "bottomRow": 188,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "1qkpiay2mk": {
                  "data": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\", \"Documentation\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 32,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.1qkpiay2mk.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\", \"Documentation\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": [\n              {\"label\":\"UI Building\"},\n              {\"label\":\"Widgets\"},\n              {\"label\":\"Pages\"},\n              {\"label\": \"Property Pane\"}\n              ]  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": eligibleData.map((row) => { return { value: row.noPriY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": eligibleData.map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": eligibleData.map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": eligibleData.map((row) => { return { value: row.critY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3AEnhancement+label%3A'+'\"'+Platform_Features.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 64,
              "widgetId": "lqb0e8dqv3",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Feature Requests",
              "xAxisName": "Type",
              "chartType": "PIE_CHART"
            },
            {
              "widgetName": "Platform_Bugs",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 152,
              "bottomRow": 188,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "dagw73kt82": {
                  "data": "{{function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\n  return arr.filter((point) => [ \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\", \"Documentation\"].includes(point.x));\n}()}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 0,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.dagw73kt82.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\", \"Documentation\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": eligibleLabels.map((label) => { return { label: label } })  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": eligibleData.map((row) => { return { value: row.noPriY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": eligibleData.map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": eligibleData.map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": eligibleData.map((row) => { return { value: row.critY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3ABug+label%3A'+'\"'+Platform_Bugs.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 32,
              "widgetId": "yn3hg23oc0",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Bugs",
              "xAxisName": "Type",
              "chartType": "CUSTOM_FUSION_CHART"
            },
            {
              "widgetName": "Action_Features",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 104,
              "bottomRow": 144,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "b1djdc4v4o": {
                  "data": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"Actions\", \"JS\", \"Autocomplete\", \"API Pane\", \"Query Editor\", \"Datasources\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 32,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.b1djdc4v4o.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"Actions\", \"JS\", \"Autocomplete\", \"API Pane\", \"Query Editor\", \"Datasources\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3AEnhancement+label%3A'+'\"'+Action_Features.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 64,
              "widgetId": "tkzffqbs4l",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Feature Requests",
              "xAxisName": "Type",
              "chartType": "PIE_CHART"
            },
            {
              "widgetName": "Action_Bugs",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 104,
              "bottomRow": 144,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "ajufwbyn7o": {
                  "data": "",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 0,
              "dynamicBindingPathList": [
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"Actions\", \"JS\", \"Autocomplete\", \"API Pane\", \"Query Editor\", \"Datasources\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": eligibleLabels.map((label) => { return { label: label } })  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": eligibleData.map((row) => { return { value: row.noPriY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": eligibleData.map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": eligibleData.map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": eligibleData.map((row) => { return { value: row.critY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3ABug+label%3A'+'\"'+Action_Bugs.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 32,
              "widgetId": "k3gbxwr9t6",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Bugs",
              "xAxisName": "Type",
              "chartType": "CUSTOM_FUSION_CHART"
            },
            {
              "widgetName": "UI_Features",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 8,
              "bottomRow": 48,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "lt95zqbynz": {
                  "data": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 32,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.lt95zqbynz.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3AEnhancement+label%3A'+'\"'+UI_Features.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 64,
              "widgetId": "z37gpu2usc",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Feature Requests",
              "xAxisName": "Type",
              "chartType": "PIE_CHART"
            },
            {
              "widgetName": "UI_Bugs",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 8,
              "bottomRow": 48,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "uz1iax44bm": {
                  "data": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\n\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": [\n              {\"label\":\"UI Building\"},\n              {\"label\":\"Widgets\"},\n              {\"label\":\"Pages\"},\n              {\"label\": \"Property Pane\"}\n              ]  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": arr.filter((point) => [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"].includes(point.x)).map((row) => { return { value: row.critY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": arr.filter((point) => [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"].includes(point.x)).map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": arr.filter((point) => [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"].includes(point.x)).map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": arr.filter((point) => [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"].includes(point.x)).map((row) => { return { value: row.noPriY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 0,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.uz1iax44bm.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\nconst eligibleLabels= [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": eligibleLabels.map((label) => { return { label: label } })  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": eligibleData.map((row) => { return { value: row.noPriY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": eligibleData.map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": eligibleData.map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": eligibleData.map((row) => { return { value: row.critY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3ABug+label%3A'+'\"'+UI_Bugs.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 32,
              "widgetId": "x24keuymnq",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Bugs",
              "xAxisName": "Type",
              "chartType": "CUSTOM_FUSION_CHART"
            },
            {
              "widgetName": "Button1",
              "rightColumn": 64,
              "onClick": "{{ [\"UI Building\", \"Actions\", \"JS\", \"Autocomplete\", \"Widgets\", \"Pages\", \"Property Pane\", \"API Pane\", \"Query Editor\", \"Datasources\", \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\"].forEach((label, index) => { fetchBugIssues.run((res, param) => {\n  let CritLen = 0;\n\tlet HighLen = 0;\n\tlet LowLen = 0;\n\tlet NoPriLen = 0;\nres.map((issue) => {\n  let noPriVal = 1;\n issue.labels.map((label) => { \n   if (label.name === \"Critical\") {\n      CritLen++;\n      noPriVal=0;\n    } else if (label.name ===\"High\") {\n      HighLen++; \n      noPriVal=0;\n    } else if (label.name === \"Low\") {\n      LowLen++; \n      noPriVal=0;\n    }\n});\n\tNoPriLen += noPriVal;\n});\nstoreValue(\"Bug-\"+param.index + \"\", { x: param.label, critY: CritLen, highY: HighLen, lowY: LowLen, noPriY: NoPriLen});\n}, undefined, { label: label, index: index });\nfetchFeatureIssues.run((res, param) => {\n\tlet CritLen = 0;\n\tlet HighLen = 0;\n\tlet LowLen = 0;\n\tlet NoPriLen = 0;\nres.map((issue) => {\n  let noPriVal = 1;\n issue.labels.map((label) => { \n   if (label.name === \"Critical\") {\n      CritLen++;\n      noPriVal=0;\n    } else if (label.name ===\"High\") {\n      HighLen++; \n      noPriVal=0;\n    } else if (label.name === \"Low\") {\n      LowLen++; \n      noPriVal=0;\n    }\n });\n\tNoPriLen += noPriVal;\n});\nstoreValue(\"Feature-\"+param.index, { x: param.label, critY: CritLen, highY: HighLen, lowY: LowLen, noPriY: NoPriLen});}, undefined, { label: label, index: index });\n });  }}",
              "isDefaultClickDisabled": true,
              "dynamicPropertyPathList": [
                {
                  "key": "onClick"
                },
                {
                  "key": "isVisible"
                }
              ],
              "buttonColor": "#03B365",
              "widgetId": "zdseojq59f",
              "topRow": 0,
              "bottomRow": 4,
              "parentRowSpace": 40,
              "isVisible": "true",
              "type": "BUTTON_WIDGET",
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onClick"
                }
              ],
              "leftColumn": 56,
              "dynamicBindingPathList": [],
              "buttonVariant": "PRIMARY",
              "text": "Refresh",
              "isDisabled": false
            },
            {
              "widgetName": "Text1",
              "rightColumn": 48,
              "textAlign": "CENTER",
              "widgetId": "ezktjvqpdb",
              "topRow": 0,
              "bottomRow": 4,
              "parentRowSpace": 40,
              "isVisible": true,
              "type": "TEXT_WIDGET",
              "fontStyle": "BOLD",
              "version": 1,
              "textColor": "#231F20",
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [],
              "leftColumn": 16,
              "dynamicBindingPathList": [],
              "fontSize": "HEADING1",
              "text": "Issue Stats"
            },
            {
              "widgetName": "Text2",
              "rightColumn": 16,
              "textAlign": "LEFT",
              "widgetId": "7ya0pcbulh",
              "topRow": 4,
              "bottomRow": 8,
              "parentRowSpace": 40,
              "isVisible": true,
              "type": "TEXT_WIDGET",
              "fontStyle": "BOLD",
              "version": 1,
              "textColor": "#231F20",
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "leftColumn": 0,
              "dynamicBindingPathList": [],
              "fontSize": "HEADING1",
              "text": "UI Pod"
            },
            {
              "widgetName": "Text3",
              "rightColumn": 16,
              "textAlign": "LEFT",
              "widgetId": "j27u5n24ky",
              "topRow": 100,
              "bottomRow": 104,
              "parentRowSpace": 40,
              "isVisible": true,
              "type": "TEXT_WIDGET",
              "fontStyle": "BOLD",
              "version": 1,
              "textColor": "#231F20",
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "leftColumn": 0,
              "dynamicBindingPathList": [],
              "fontSize": "HEADING1",
              "text": "Action Pod"
            },
            {
              "widgetName": "Text4",
              "rightColumn": 16,
              "textAlign": "LEFT",
              "widgetId": "1mz91y6jkw",
              "topRow": 148,
              "bottomRow": 152,
              "parentRowSpace": 40,
              "isVisible": true,
              "type": "TEXT_WIDGET",
              "fontStyle": "BOLD",
              "version": 1,
              "textColor": "#231F20",
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "leftColumn": 0,
              "dynamicBindingPathList": [],
              "fontSize": "HEADING1",
              "text": "Platform Pod"
            },
            {
              "widgetName": "Widget_Issues",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 48,
              "bottomRow": 96,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "98tipygcdk": {
                  "data": "{{\nfunction() {\n  const countMap = {};\n  const widgetLabels = fetchLabels.data.filter((label) => {  \n    return label.name.toLowerCase().includes(\"widget\") && label.name !== \"Widgets\" \n  });\n  const allWidgetIssues = [...(fetchWidgetIssues1).data, ...fetchWidgetIssues2.data];\nwidgetLabels.forEach((widgetLabel) => {  \n  allWidgetIssues.forEach((issue) => { \n  const foundIssue =  issue.labels.find((label) => label.name == widgetLabel.name );\n  if (foundIssue) {\n    if (countMap[widgetLabel.name] !== undefined)\n      countMap[widgetLabel.name] += 1; \n    else countMap[widgetLabel.name] = 1;\n  }\n });\n});\nreturn Object.keys(countMap).map((key) => { return { x: key, y: countMap[key] } });\n }();\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 0,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.98tipygcdk.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\nfunction() {\n  const countMap = {};\n  const widgetLabels = fetchLabels.data.filter((label) => {  \n    return label.name.toLowerCase().includes(\"widget\") && label.name !== \"Widgets\" \n  });\n  const allWidgetIssues = [...fetchWidgetIssues1.data, ...fetchWidgetIssues2.data];\nwidgetLabels.forEach((widgetLabel) => {  \n  allWidgetIssues.forEach((issue) => {\n    let isBug = false;\n    let isFeature = false;\n    let isWidget = false;\n  const foundBug =  issue.labels.map((label) => {\n    if (label.name == widgetLabel.name)\n      isWidget = true;\n    if (label.name === \"Bug\") \n      isBug = true;\n    if (label.name === \"Enhancement\")\n      isFeature = true;\n  } );\n  if (isWidget && (isBug || isFeature)) {\n    if (countMap[widgetLabel.name] !== undefined) {\n      if (isBug) {\n        countMap[widgetLabel.name].bug +=1;\n      } else {\n        countMap[widgetLabel.name].feature +=1;\n      } \n    } else  {\n      if (isBug) {\n        countMap[widgetLabel.name] = {\n          bug: 1,\n          feature: 0\n        }\n      } else {\n        countMap[widgetLabel.name] = {\n          bug: 0,\n          feature: 1\n        }\n      }\n    }\n  }\n });\n});\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": Object.keys(countMap).map((label) => { return { label: label } }) \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"Features\",\n            \"color\": \"4287f5\",\n            \"data\": Object.values(countMap).map((value) => { return { value: value.feature } })\n        },\n        {\n            \"seriesname\": \"Bugs\",\n            \"color\": \"e08916\",\n            \"data\": Object.values(countMap).map((value) => { return { value: value.bug } })\n        }\n    ]\n}\n};\n\nreturn chartData;\n }();\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3A'+'\"'+Widget_Issues.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 64,
              "widgetId": "tdvwwq5pe0",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "Issues",
              "chartName": "Widget Issues",
              "xAxisName": "Widgets",
              "chartType": "CUSTOM_FUSION_CHART"
            },
            {
              "widgetName": "Modal1",
              "rightColumn": 0,
              "detachFromLayout": true,
              "widgetId": "9elvc3qslx",
              "topRow": 0,
              "bottomRow": 0,
              "parentRowSpace": 1,
              "canOutsideClickClose": true,
              "type": "MODAL_WIDGET",
              "canEscapeKeyClose": true,
              "version": 2,
              "parentId": "0",
              "shouldScrollContents": true,
              "isLoading": false,
              "parentColumnSpace": 1,
              "leftColumn": 0,
              "dynamicBindingPathList": [],
              "children": [
                {
                  "widgetName": "Canvas1",
                  "rightColumn": 0,
                  "detachFromLayout": true,
                  "widgetId": "c4hhvcrfmp",
                  "topRow": 0,
                  "bottomRow": 2560,
                  "parentRowSpace": 1,
                  "isVisible": true,
                  "canExtend": true,
                  "type": "CANVAS_WIDGET",
                  "version": 1,
                  "parentId": "9elvc3qslx",
                  "shouldScrollContents": false,
                  "minHeight": 600,
                  "isLoading": false,
                  "parentColumnSpace": 1,
                  "dynamicTriggerPathList": [],
                  "leftColumn": 0,
                  "dynamicBindingPathList": [],
                  "children": [
                    {
                      "isRequired": false,
                      "widgetName": "Icon1",
                      "rightColumn": 64,
                      "onClick": "{{closeModal('Modal1')}}",
                      "color": "#040627",
                      "iconName": "cross",
                      "widgetId": "9tm6x2j2g8",
                      "topRow": 0,
                      "bottomRow": 4,
                      "isVisible": true,
                      "type": "ICON_WIDGET",
                      "version": 1,
                      "parentId": "c4hhvcrfmp",
                      "isLoading": false,
                      "leftColumn": 56,
                      "dynamicBindingPathList": [],
                      "iconSize": 24
                    },
                    {
                      "widgetName": "Text5",
                      "rightColumn": 40,
                      "textAlign": "LEFT",
                      "widgetId": "hijvs0giwn",
                      "topRow": 0,
                      "bottomRow": 4,
                      "isVisible": true,
                      "type": "TEXT_WIDGET",
                      "fontStyle": "BOLD",
                      "version": 1,
                      "textColor": "#231F20",
                      "parentId": "c4hhvcrfmp",
                      "isLoading": false,
                      "leftColumn": 0,
                      "dynamicBindingPathList": [],
                      "fontSize": "HEADING1",
                      "text": "Modal Title"
                    },
                    {
                      "widgetName": "Button2",
                      "rightColumn": 48,
                      "isDefaultClickDisabled": true,
                      "buttonColor": "#03B365",
                      "widgetId": "u84g7m7nwx",
                      "topRow": 52,
                      "bottomRow": 56,
                      "isVisible": true,
                      "type": "BUTTON_WIDGET",
                      "version": 1,
                      "parentId": "c4hhvcrfmp",
                      "isLoading": false,
                      "leftColumn": 36,
                      "dynamicBindingPathList": [],
                      "buttonVariant": "SECONDARY",
                      "text": "Cancel",
                      "isDisabled": false
                    },
                    {
                      "widgetName": "Button3",
                      "rightColumn": 64,
                      "isDefaultClickDisabled": true,
                      "buttonColor": "#03B365",
                      "widgetId": "93ah83a6j5",
                      "topRow": 52,
                      "bottomRow": 56,
                      "isVisible": true,
                      "type": "BUTTON_WIDGET",
                      "version": 1,
                      "parentId": "c4hhvcrfmp",
                      "isLoading": false,
                      "leftColumn": 48,
                      "dynamicBindingPathList": [],
                      "buttonVariant": "PRIMARY",
                      "text": "Confirm",
                      "isDisabled": false
                    }
                  ],
                  "isDisabled": false
                }
              ],
              "width": 532,
              "height": 600
            }
          ]
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "61cc070506220a20ef3ec37f",
              "name": "fetchWidgetIssues2",
              "pluginType": "API",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "61cc070506220a20ef3ec37a",
              "name": "fetchLabels",
              "pluginType": "API",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "61cc070506220a20ef3ec37c",
              "name": "fetchWidgetIssues1",
              "pluginType": "API",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "validOnPageLoadActions": true,
        "id": "Issue Stats",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "publishedPage": {
    "name": "Issue Stats",
    "slug": "issue-stats",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 763,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 1900,
          "containerStyle": "none",
          "snapRows": 196,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 46,
          "minHeight": 1292,
          "parentColumnSpace": 1,
          "dynamicTriggerPathList": [],
          "dynamicBindingPathList": [],
          "leftColumn": 0,
          "children": [
            {
              "widgetName": "Platform_Features",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 152,
              "bottomRow": 188,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "1qkpiay2mk": {
                  "data": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\", \"Documentation\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 32,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.1qkpiay2mk.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\", \"Documentation\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": [\n              {\"label\":\"UI Building\"},\n              {\"label\":\"Widgets\"},\n              {\"label\":\"Pages\"},\n              {\"label\": \"Property Pane\"}\n              ]  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": eligibleData.map((row) => { return { value: row.noPriY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": eligibleData.map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": eligibleData.map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": eligibleData.map((row) => { return { value: row.critY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3AEnhancement+label%3A'+'\"'+Platform_Features.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 64,
              "widgetId": "lqb0e8dqv3",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Feature Requests",
              "xAxisName": "Type",
              "chartType": "PIE_CHART"
            },
            {
              "widgetName": "Platform_Bugs",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 152,
              "bottomRow": 188,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "dagw73kt82": {
                  "data": "{{function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\n  return arr.filter((point) => [ \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\", \"Documentation\"].includes(point.x));\n}()}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 0,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.dagw73kt82.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\", \"Documentation\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": eligibleLabels.map((label) => { return { label: label } })  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": eligibleData.map((row) => { return { value: row.noPriY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": eligibleData.map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": eligibleData.map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": eligibleData.map((row) => { return { value: row.critY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3ABug+label%3A'+'\"'+Platform_Bugs.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 32,
              "widgetId": "yn3hg23oc0",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Bugs",
              "xAxisName": "Type",
              "chartType": "CUSTOM_FUSION_CHART"
            },
            {
              "widgetName": "Action_Features",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 104,
              "bottomRow": 144,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "b1djdc4v4o": {
                  "data": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"Actions\", \"JS\", \"Autocomplete\", \"API Pane\", \"Query Editor\", \"Datasources\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 32,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.b1djdc4v4o.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"Actions\", \"JS\", \"Autocomplete\", \"API Pane\", \"Query Editor\", \"Datasources\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3AEnhancement+label%3A'+'\"'+Action_Features.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 64,
              "widgetId": "tkzffqbs4l",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Feature Requests",
              "xAxisName": "Type",
              "chartType": "PIE_CHART"
            },
            {
              "widgetName": "Action_Bugs",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 104,
              "bottomRow": 144,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "ajufwbyn7o": {
                  "data": "",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 0,
              "dynamicBindingPathList": [
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\nconst eligibleLabels= [ \"Actions\", \"JS\", \"Autocomplete\", \"API Pane\", \"Query Editor\", \"Datasources\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": eligibleLabels.map((label) => { return { label: label } })  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": eligibleData.map((row) => { return { value: row.noPriY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": eligibleData.map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": eligibleData.map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": eligibleData.map((row) => { return { value: row.critY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3ABug+label%3A'+'\"'+Action_Bugs.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 32,
              "widgetId": "k3gbxwr9t6",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Bugs",
              "xAxisName": "Type",
              "chartType": "CUSTOM_FUSION_CHART"
            },
            {
              "widgetName": "UI_Features",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 8,
              "bottomRow": 48,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "lt95zqbynz": {
                  "data": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 32,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.lt95zqbynz.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Feature-\"+i + \"\"]);\n}\nconst eligibleLabels= [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nreturn eligibleData.map((row) => { return { x: row.x, y: row.noPriY + row.lowY + row.highY + row.critY + \"\" } })\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3AEnhancement+label%3A'+'\"'+UI_Features.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 64,
              "widgetId": "z37gpu2usc",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Feature Requests",
              "xAxisName": "Type",
              "chartType": "PIE_CHART"
            },
            {
              "widgetName": "UI_Bugs",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 8,
              "bottomRow": 48,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "uz1iax44bm": {
                  "data": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\n\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": [\n              {\"label\":\"UI Building\"},\n              {\"label\":\"Widgets\"},\n              {\"label\":\"Pages\"},\n              {\"label\": \"Property Pane\"}\n              ]  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": arr.filter((point) => [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"].includes(point.x)).map((row) => { return { value: row.critY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": arr.filter((point) => [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"].includes(point.x)).map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": arr.filter((point) => [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"].includes(point.x)).map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": arr.filter((point) => [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"].includes(point.x)).map((row) => { return { value: row.noPriY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 0,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.uz1iax44bm.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\n  function() { \nlet arr = [];\nfor(let i = 0; i < 14; i++) { \n  arr.push( appsmith.store[\"Bug-\"+i + \"\"]);\n}\nconst eligibleLabels= [\"UI Building\",  \"Widgets\", \"Pages\", \"Property Pane\"];\nconst eligibleData = arr.filter((point) => eligibleLabels.includes(point.x));\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": eligibleLabels.map((label) => { return { label: label } })  \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"No Priority\",\n            \"color\": \"766d7a\",\n            \"data\": eligibleData.map((row) => { return { value: row.noPriY } })\n        },\n        {\n            \"seriesname\": \"Low\",\n            \"color\": \"eaff00\",\n            \"data\": eligibleData.map((row) => { return { value: row.lowY } })\n        },\n        {\n            \"seriesname\": \"High\",\n            \"color\": \"e86f0c\",\n            \"data\": eligibleData.map((row) => { return { value: row.highY } })\n        },\n        {\n            \"seriesname\": \"Critical\",\n            \"color\": \"db0723\",\n            \"data\": eligibleData.map((row) => { return { value: row.critY } })\n        }\n    ]\n}\n};\n   return chartData;\n}()\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3ABug+label%3A'+'\"'+UI_Bugs.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 32,
              "widgetId": "x24keuymnq",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "# of Issues",
              "chartName": "Bugs",
              "xAxisName": "Type",
              "chartType": "CUSTOM_FUSION_CHART"
            },
            {
              "widgetName": "Button1",
              "rightColumn": 64,
              "onClick": "{{ [\"UI Building\", \"Actions\", \"JS\", \"Autocomplete\", \"Widgets\", \"Pages\", \"Property Pane\", \"API Pane\", \"Query Editor\", \"Datasources\", \"ACL\", \"Login / Signup\", \"Telemetry\", \"Deployment\"].forEach((label, index) => { fetchBugIssues.run((res, param) => {\n  let CritLen = 0;\n\tlet HighLen = 0;\n\tlet LowLen = 0;\n\tlet NoPriLen = 0;\nres.map((issue) => {\n  let noPriVal = 1;\n issue.labels.map((label) => { \n   if (label.name === \"Critical\") {\n      CritLen++;\n      noPriVal=0;\n    } else if (label.name ===\"High\") {\n      HighLen++; \n      noPriVal=0;\n    } else if (label.name === \"Low\") {\n      LowLen++; \n      noPriVal=0;\n    }\n});\n\tNoPriLen += noPriVal;\n});\nstoreValue(\"Bug-\"+param.index + \"\", { x: param.label, critY: CritLen, highY: HighLen, lowY: LowLen, noPriY: NoPriLen});\n}, undefined, { label: label, index: index });\nfetchFeatureIssues.run((res, param) => {\n\tlet CritLen = 0;\n\tlet HighLen = 0;\n\tlet LowLen = 0;\n\tlet NoPriLen = 0;\nres.map((issue) => {\n  let noPriVal = 1;\n issue.labels.map((label) => { \n   if (label.name === \"Critical\") {\n      CritLen++;\n      noPriVal=0;\n    } else if (label.name ===\"High\") {\n      HighLen++; \n      noPriVal=0;\n    } else if (label.name === \"Low\") {\n      LowLen++; \n      noPriVal=0;\n    }\n });\n\tNoPriLen += noPriVal;\n});\nstoreValue(\"Feature-\"+param.index, { x: param.label, critY: CritLen, highY: HighLen, lowY: LowLen, noPriY: NoPriLen});}, undefined, { label: label, index: index });\n });  }}",
              "isDefaultClickDisabled": true,
              "dynamicPropertyPathList": [
                {
                  "key": "onClick"
                },
                {
                  "key": "isVisible"
                }
              ],
              "buttonColor": "#03B365",
              "widgetId": "zdseojq59f",
              "topRow": 0,
              "bottomRow": 4,
              "parentRowSpace": 40,
              "isVisible": "true",
              "type": "BUTTON_WIDGET",
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onClick"
                }
              ],
              "leftColumn": 56,
              "dynamicBindingPathList": [],
              "buttonVariant": "PRIMARY",
              "text": "Refresh",
              "isDisabled": false
            },
            {
              "widgetName": "Text1",
              "rightColumn": 48,
              "textAlign": "CENTER",
              "widgetId": "ezktjvqpdb",
              "topRow": 0,
              "bottomRow": 4,
              "parentRowSpace": 40,
              "isVisible": true,
              "type": "TEXT_WIDGET",
              "fontStyle": "BOLD",
              "version": 1,
              "textColor": "#231F20",
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [],
              "leftColumn": 16,
              "dynamicBindingPathList": [],
              "fontSize": "HEADING1",
              "text": "Issue Stats"
            },
            {
              "widgetName": "Text2",
              "rightColumn": 16,
              "textAlign": "LEFT",
              "widgetId": "7ya0pcbulh",
              "topRow": 4,
              "bottomRow": 8,
              "parentRowSpace": 40,
              "isVisible": true,
              "type": "TEXT_WIDGET",
              "fontStyle": "BOLD",
              "version": 1,
              "textColor": "#231F20",
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "leftColumn": 0,
              "dynamicBindingPathList": [],
              "fontSize": "HEADING1",
              "text": "UI Pod"
            },
            {
              "widgetName": "Text3",
              "rightColumn": 16,
              "textAlign": "LEFT",
              "widgetId": "j27u5n24ky",
              "topRow": 100,
              "bottomRow": 104,
              "parentRowSpace": 40,
              "isVisible": true,
              "type": "TEXT_WIDGET",
              "fontStyle": "BOLD",
              "version": 1,
              "textColor": "#231F20",
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "leftColumn": 0,
              "dynamicBindingPathList": [],
              "fontSize": "HEADING1",
              "text": "Action Pod"
            },
            {
              "widgetName": "Text4",
              "rightColumn": 16,
              "textAlign": "LEFT",
              "widgetId": "1mz91y6jkw",
              "topRow": 148,
              "bottomRow": 152,
              "parentRowSpace": 40,
              "isVisible": true,
              "type": "TEXT_WIDGET",
              "fontStyle": "BOLD",
              "version": 1,
              "textColor": "#231F20",
              "parentId": "0",
              "isLoading": false,
              "parentColumnSpace": 74,
              "leftColumn": 0,
              "dynamicBindingPathList": [],
              "fontSize": "HEADING1",
              "text": "Platform Pod"
            },
            {
              "widgetName": "Widget_Issues",
              "allowScroll": false,
              "dynamicPropertyPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "topRow": 48,
              "bottomRow": 96,
              "parentRowSpace": 40,
              "type": "CHART_WIDGET",
              "chartData": {
                "98tipygcdk": {
                  "data": "{{\nfunction() {\n  const countMap = {};\n  const widgetLabels = fetchLabels.data.filter((label) => {  \n    return label.name.toLowerCase().includes(\"widget\") && label.name !== \"Widgets\" \n  });\n  const allWidgetIssues = [...(fetchWidgetIssues1).data, ...fetchWidgetIssues2.data];\nwidgetLabels.forEach((widgetLabel) => {  \n  allWidgetIssues.forEach((issue) => { \n  const foundIssue =  issue.labels.find((label) => label.name == widgetLabel.name );\n  if (foundIssue) {\n    if (countMap[widgetLabel.name] !== undefined)\n      countMap[widgetLabel.name] += 1; \n    else countMap[widgetLabel.name] = 1;\n  }\n });\n});\nreturn Object.keys(countMap).map((key) => { return { x: key, y: countMap[key] } });\n }();\n}}",
                  "seriesName": ""
                }
              },
              "parentColumnSpace": 74,
              "dynamicTriggerPathList": [
                {
                  "key": "onDataPointClick"
                }
              ],
              "leftColumn": 0,
              "dynamicBindingPathList": [
                {
                  "key": "chartData.98tipygcdk.data"
                },
                {
                  "key": "customFusionChartConfig"
                }
              ],
              "customFusionChartConfig": "{{\nfunction() {\n  const countMap = {};\n  const widgetLabels = fetchLabels.data.filter((label) => {  \n    return label.name.toLowerCase().includes(\"widget\") && label.name !== \"Widgets\" \n  });\n  const allWidgetIssues = [...fetchWidgetIssues1.data, ...fetchWidgetIssues2.data];\nwidgetLabels.forEach((widgetLabel) => {  \n  allWidgetIssues.forEach((issue) => {\n    let isBug = false;\n    let isFeature = false;\n    let isWidget = false;\n  const foundBug =  issue.labels.map((label) => {\n    if (label.name == widgetLabel.name)\n      isWidget = true;\n    if (label.name === \"Bug\") \n      isBug = true;\n    if (label.name === \"Enhancement\")\n      isFeature = true;\n  } );\n  if (isWidget && (isBug || isFeature)) {\n    if (countMap[widgetLabel.name] !== undefined) {\n      if (isBug) {\n        countMap[widgetLabel.name].bug +=1;\n      } else {\n        countMap[widgetLabel.name].feature +=1;\n      } \n    } else  {\n      if (isBug) {\n        countMap[widgetLabel.name] = {\n          bug: 1,\n          feature: 0\n        }\n      } else {\n        countMap[widgetLabel.name] = {\n          bug: 0,\n          feature: 1\n        }\n      }\n    }\n  }\n });\n});\nconst chartData = {\n\"type\": \"scrollstackedcolumn2d\",\n\"dataSource\": {\n    \"chart\": {\n        \"xaxisname\": \"Type\",\n        \"yaxisname\": \"No. Issues\",\n        \"numberprefix\": \"#\",\n        \"lineThickness\": \"3\",\n        \"flatScrollBars\": \"1\",\n        \"scrollheight\": \"10\",\n        \"theme\": \"fusion\"\n    },\n    \"categories\": [\n        {\n            \"category\": Object.keys(countMap).map((label) => { return { label: label } }) \n        }\n    ],\n    \"dataset\": [\n        {\n            \"seriesname\": \"Features\",\n            \"color\": \"4287f5\",\n            \"data\": Object.values(countMap).map((value) => { return { value: value.feature } })\n        },\n        {\n            \"seriesname\": \"Bugs\",\n            \"color\": \"e08916\",\n            \"data\": Object.values(countMap).map((value) => { return { value: value.bug } })\n        }\n    ]\n}\n};\n\nreturn chartData;\n }();\n}}",
              "onDataPointClick": "{{navigateTo('https://github.com/appsmithorg/appsmith/issues?q=is%3Aopen+is%3Aissue+label%3A'+'\"'+Widget_Issues.selectedDataPoint.x.replace(\" \", \"+\")+'\"',{}, 'NEW_WINDOW')}}",
              "rightColumn": 64,
              "widgetId": "tdvwwq5pe0",
              "isVisible": true,
              "version": 1,
              "parentId": "0",
              "isLoading": false,
              "yAxisName": "Issues",
              "chartName": "Widget Issues",
              "xAxisName": "Widgets",
              "chartType": "CUSTOM_FUSION_CHART"
            },
            {
              "widgetName": "Modal1",
              "rightColumn": 0,
              "detachFromLayout": true,
              "widgetId": "9elvc3qslx",
              "topRow": 0,
              "bottomRow": 0,
              "parentRowSpace": 1,
              "canOutsideClickClose": true,
              "type": "MODAL_WIDGET",
              "canEscapeKeyClose": true,
              "version": 2,
              "parentId": "0",
              "shouldScrollContents": true,
              "isLoading": false,
              "parentColumnSpace": 1,
              "leftColumn": 0,
              "dynamicBindingPathList": [],
              "children": [
                {
                  "widgetName": "Canvas1",
                  "rightColumn": 0,
                  "detachFromLayout": true,
                  "widgetId": "c4hhvcrfmp",
                  "topRow": 0,
                  "bottomRow": 2560,
                  "parentRowSpace": 1,
                  "isVisible": true,
                  "canExtend": true,
                  "type": "CANVAS_WIDGET",
                  "version": 1,
                  "parentId": "9elvc3qslx",
                  "shouldScrollContents": false,
                  "minHeight": 600,
                  "isLoading": false,
                  "parentColumnSpace": 1,
                  "dynamicTriggerPathList": [],
                  "leftColumn": 0,
                  "dynamicBindingPathList": [],
                  "children": [
                    {
                      "isRequired": false,
                      "widgetName": "Icon1",
                      "rightColumn": 64,
                      "onClick": "{{closeModal('Modal1')}}",
                      "color": "#040627",
                      "iconName": "cross",
                      "widgetId": "9tm6x2j2g8",
                      "topRow": 0,
                      "bottomRow": 4,
                      "isVisible": true,
                      "type": "ICON_WIDGET",
                      "version": 1,
                      "parentId": "c4hhvcrfmp",
                      "isLoading": false,
                      "leftColumn": 56,
                      "dynamicBindingPathList": [],
                      "iconSize": 24
                    },
                    {
                      "widgetName": "Text5",
                      "rightColumn": 40,
                      "textAlign": "LEFT",
                      "widgetId": "hijvs0giwn",
                      "topRow": 0,
                      "bottomRow": 4,
                      "isVisible": true,
                      "type": "TEXT_WIDGET",
                      "fontStyle": "BOLD",
                      "version": 1,
                      "textColor": "#231F20",
                      "parentId": "c4hhvcrfmp",
                      "isLoading": false,
                      "leftColumn": 0,
                      "dynamicBindingPathList": [],
                      "fontSize": "HEADING1",
                      "text": "Modal Title"
                    },
                    {
                      "widgetName": "Button2",
                      "rightColumn": 48,
                      "isDefaultClickDisabled": true,
                      "buttonColor": "#03B365",
                      "widgetId": "u84g7m7nwx",
                      "topRow": 52,
                      "bottomRow": 56,
                      "isVisible": true,
                      "type": "BUTTON_WIDGET",
                      "version": 1,
                      "parentId": "c4hhvcrfmp",
                      "isLoading": false,
                      "leftColumn": 36,
                      "dynamicBindingPathList": [],
                      "buttonVariant": "SECONDARY",
                      "text": "Cancel",
                      "isDisabled": false
                    },
                    {
                      "widgetName": "Button3",
                      "rightColumn": 64,
                      "isDefaultClickDisabled": true,
                      "buttonColor": "#03B365",
                      "widgetId": "93ah83a6j5",
                      "topRow": 52,
                      "bottomRow": 56,
                      "isVisible": true,
                      "type": "BUTTON_WIDGET",
                      "version": 1,
                      "parentId": "c4hhvcrfmp",
                      "isLoading": false,
                      "leftColumn": 48,
                      "dynamicBindingPathList": [],
                      "buttonVariant": "PRIMARY",
                      "text": "Confirm",
                      "isDisabled": false
                    }
                  ],
                  "isDisabled": false
                }
              ],
              "width": 532,
              "height": 600
            }
          ]
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "61cc070506220a20ef3ec37f",
              "name": "fetchWidgetIssues2",
              "pluginType": "API",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "61cc070506220a20ef3ec37a",
              "name": "fetchLabels",
              "pluginType": "API",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "61cc070506220a20ef3ec37c",
              "name": "fetchWidgetIssues1",
              "pluginType": "API",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "validOnPageLoadActions": true,
        "id": "Issue Stats",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "deleted": false,
  "policies": [],
  "userPermissions": [
    "read:pages",
    "manage:pages"
  ],
  "gitSyncId": "61bc40789229e87746b78a3e_2021-12-17T07:47:04.628592Z"
}