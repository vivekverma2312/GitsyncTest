{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getUpdates",
    "fullyQualifiedName": "Airtable_Transformer.getUpdatess",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "invalids": [
        "No datasource configuration found. Please configure it and try again."
      ],
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Todays Updates",
    "collectionId": "61bc40799229e87746b78a47",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n\t\tconst updatedArray = fetchStandup.data.map((row) => {\n\t\t\treturn {\n\t\t\t\t...row,\n\t\t\t\t\t\"Created At\": row.date\n\t\t\t};\n\t\t});\n\t\treturn updatedArray.filter((row) => { \n\t\t\tif (Input1.text) {\n\t\t\t\treturn row.name.toLowerCase().includes(Input1.text.toLowerCase())\n\t\t\t} else if (Select1.selectedOptionValue) {\n\t\t\t\treturn row.pod == Select1.selectedOptionValue\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t})\n\t}",
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "publishedAction": {
    "name": "getUpdates",
    "fullyQualifiedName": "Airtable_Transformer.getUpdatess",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "invalids": [
        "No datasource configuration found. Please configure it and try again."
      ],
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Todays Updates",
    "collectionId": "61bc40799229e87746b78a47",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n\t\tconst updatedArray = fetchStandup.data.map((row) => {\n\t\t\treturn {\n\t\t\t\t...row,\n\t\t\t\t\t\"Created At\": row.date\n\t\t\t};\n\t\t});\n\t\treturn updatedArray.filter((row) => { \n\t\t\tif (Input1.text) {\n\t\t\t\treturn row.name.toLowerCase().includes(Input1.text.toLowerCase())\n\t\t\t} else if (Select1.selectedOptionValue) {\n\t\t\t\treturn row.pod == Select1.selectedOptionValue\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t})\n\t}",
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "61cc070406220a20ef3ec36c",
  "deleted": false,
  "userPermissions": [
    "read:actions",
    "execute:actions",
    "manage:actions"
  ],
  "gitSyncId": "61bc40789229e87746b78a3e_2021-12-17T07:47:05.599390Z"
}